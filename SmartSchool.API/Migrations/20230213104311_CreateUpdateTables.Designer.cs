// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.DbContexts;

#nullable disable

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230213104311_CreateUpdateTables")]
    partial class CreateUpdateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia de Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciencia de Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.CourseStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreRequirementId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("WorkLoad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PreRequirementId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Discipline");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 2,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            WorkLoad = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 3,
                            WorkLoad = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.DisciplineStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("DisciplineStudent");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3551)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3554)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3555)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3556)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3558)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3559)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3560)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3563)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3564)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3565)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3566)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3568)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3569)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3597)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3600)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3601)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3602)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3604)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3605)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3606)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3607)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3609)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            DateBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3610)
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3445),
                            Name = "Marta",
                            Registration = 1,
                            Surname = "Kent",
                            Telephone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DateBirth = new DateTime(2005, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3515),
                            Name = "Paula",
                            Registration = 2,
                            Surname = "Isabela",
                            Telephone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DateBirth = new DateTime(2005, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3520),
                            Name = "Laura",
                            Registration = 3,
                            Surname = "Antonia",
                            Telephone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            DateBirth = new DateTime(2005, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3524),
                            Name = "Luiza",
                            Registration = 4,
                            Surname = "Maria",
                            Telephone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            DateBirth = new DateTime(2005, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3527),
                            Name = "Lucas",
                            Registration = 5,
                            Surname = "Machado",
                            Telephone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            DateBirth = new DateTime(2005, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3531),
                            Name = "Pedro",
                            Registration = 6,
                            Surname = "Alvares",
                            Telephone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            DateBirth = new DateTime(2005, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3535),
                            Name = "Paulo",
                            Registration = 7,
                            Surname = "José",
                            Telephone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTimeBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teacher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3355),
                            Name = "Lauro",
                            Registration = 1,
                            Surname = "Oliveira"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3390),
                            Name = "Roberto",
                            Registration = 2,
                            Surname = "Soares"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3392),
                            Name = "Ronaldo",
                            Registration = 3,
                            Surname = "Cristiano"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3393),
                            Name = "Rodrigo",
                            Registration = 4,
                            Surname = "Carvalho"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            DateTimeBegin = new DateTime(2023, 2, 13, 10, 43, 11, 463, DateTimeKind.Local).AddTicks(3394),
                            Name = "Alexandre",
                            Registration = 5,
                            Surname = "Montana"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.CourseStudent", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "PreRequirement")
                        .WithMany()
                        .HasForeignKey("PreRequirementId");

                    b.HasOne("SmartSchool.WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PreRequirement");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.DisciplineStudent", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Discipline")
                        .WithMany("DisciplineStudents")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany("DisciplineStudent")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Course", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Navigation("DisciplineStudents");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Navigation("DisciplineStudent");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
